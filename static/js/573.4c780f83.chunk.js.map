{"version":3,"file":"static/js/573.4c780f83.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","this","order","scheduled","Set","process","has","add","push","index","indexOf","splice","delete","length","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","wake","keepAlive","immediate","queueMicrotask","microtask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","exec","token1","token2","fallback","getVariableValue","depth","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","onKeyframesResolved","resolveKeyframes","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","sample","speed","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","onPlay","tick","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","sampleTime","setWithVelocity","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","propName","newValue","cancelAll","attachTimeline","prevProgress","onFrame","observeTimeline","cancelTimeline","getAll","setAll","methodName","controls","animateMotionValue","isHandoff","valueTransition","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","setTarget","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","postRender","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","HandoffCancelAllAnimations","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}