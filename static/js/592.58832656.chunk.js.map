{"version":3,"file":"static/js/592.58832656.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","utils/checkNameContact.js","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ButtonAdd/ButtonAdd.styled.js","components/ButtonAdd/ButtonAdd.jsx","components/ErrorInfo/ErrorInfo.jsx","components/ContactSectionAnimation/ContactSectionAnimation.jsx","components/Contacts/Contacts.jsx","components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","components/ContactsView/ContactsView.jsx","page/Contacts/Contacts.jsx","utils/variant.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SectionStyle = styled.section`\n  padding: 0px 0px 20px 0px;\n`;","import PropTypes from 'prop-types';\nimport { SectionStyle } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionStyle>{children}</SectionStyle>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const ContainerStyle = styled.div`\n   width: auto;\n\n   margin-left: auto;\n   margin-right: auto; \n`;","import { ContainerStyle } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <ContainerStyle>{children}</ContainerStyle>;\n};\n","import styled from \"styled-components\";\n\n\nexport const TitleStyle = styled.h1`\n    display: flex;\n    justify-content: center;\n\n    margin-bottom: 20px;\n`;","import PropTypes from 'prop-types';\nimport { TitleStyle } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleStyle>{title}</TitleStyle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const ErrorMsg = styled.p`\n    color: red;\n    margin-bottom: 20px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { createContact } from 'redux/contacts/operations';\nimport { checkNameContact } from 'utils';\n\nimport { ErrorMsg } from './ContactsForm.styled';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nconst regexForName =\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst validationMessageForName =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\n\nconst regexForNumber = /^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$/;\nconst validationMessageForNumber =\n  'Phone number must be digits(no less than ten) and can contain spaces, dashes, parentheses and can start with +';\n\nexport const ContactsForm = ({ toggleModal }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const handleSubmitForm = user => {\n    const { name } = user;\n    if (checkNameContact(contacts, name)) {\n      dispatch(createContact(user));\n    }\n    toggleModal();\n    reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Contact\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit(handleSubmitForm)}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"outlined-helperText\"\n            label=\"Enter Name\"\n            name=\"name\"\n            autoFocus\n            helperText=\"Important Name\"\n            {...register('name', {\n              required: 'Name is required',\n              pattern: {\n                value: regexForName,\n                message: validationMessageForName,\n              },\n            })}\n          />\n          {errors.name && <ErrorMsg>{errors.name.message}</ErrorMsg>}\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"outlined-number\"\n            name=\"number\"\n            label=\"Enter Number Telephone\"\n            type=\"number\"\n            {...register('number', {\n              required: 'Number is required',\n              pattern: {\n                value: regexForNumber,\n                message: validationMessageForNumber,\n              },\n            })}\n          />\n          {errors.number && <ErrorMsg>{errors.number.message}</ErrorMsg>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Create\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {'changed my mind'}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nContactsForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","import { toast } from 'react-toastify';\n\nexport const checkNameContact = (contacts, name) => {\n    const checkName = contacts.some(\n        ({ name: nameContact }) =>\n            nameContact.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n        toast.warn(`${name}is already in contact`, {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'light',\n        });\n        return;\n    }\n    return !checkName;\n}","import styled from \"styled-components\";\n\nexport const ContactDescr = styled.p`\n    margin-right: 10px;\n    font-size: 26px;\n\n    font-weight: 500;\n\n    @media (max-width: 425px) {\n      font-size: 16px;\n      margin-bottom: 4px;\n   }\n`;\n\nexport const ContactDescrNumb = styled.span`\n    display: flex;\n    align-items: center;\n\n    margin-right: 18px;\n\n    font-size: 24px;\n\n    @media (max-width: 425px) {\n      font-size: 16px;\n      margin-bottom: 10px;\n   }\n`;\n\nexport const BtnDelete = styled.button`\n    background-color: rgb(112, 155, 212);\n    color: white;\n\n    border-color: red; \n    border-radius: 8px;\n\n    cursor: pointer;\n\n    &:hover,\n    :focus{\n        background-color: rgb(224, 77, 102); \n    }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeContactById } from 'redux/contacts/operations';\n\nimport {\n  BtnDelete,\n  ContactDescr,\n  ContactDescrNumb,\n} from './ContactsItem.styled';\n\nexport const ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ContactDescr>{name} :</ContactDescr>\n      <ContactDescrNumb>{number}</ContactDescrNumb>\n      <BtnDelete onClick={() => dispatch(removeContactById(id))}>\n        Delete\n      </BtnDelete>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    width: 550px;\n\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 16px;\n\n    @media (max-width: 425px) {\n      width: 320px;\n   }\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    justify-content: center;\n\n    padding: 10px;\n\n    border-bottom: 2px solid;\n    border-color:  rgb(203, 204, 206);\n\n    transition-property: border-color transform;\n    transition-duration: 500ms;\n    transition-timing-function: linear;\n\n    &:not(:last-child){\n        margin-bottom: 10px;\n    }\n\n    &:hover,\n    &:focus{\n        border-color: rgb(141, 176, 192);\n        transform: scale(1.2);\n    }\n\n    @media (max-width: 425px) {\n        display: block;\n        width: 180px;\n        margin: 0 auto;\n        padding: 10px;\n\n        border: 2px solid rgb(203, 204, 206);\n        border-radius: 6px; \n\n        background-color: #ff784e;\n    }\n`;","import { useSelector } from 'react-redux';\nimport { selectIsLoading, selectVisibleContact } from 'redux/contacts';\n\nimport { ContactsItem } from 'components/ContactsItem';\nimport { List, ListItem } from './ContactList.styled';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContact);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <List>\n        {contacts?.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <ContactsItem id={id} name={name} number={number} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    border-bottom: 2px dashed rgb(177, 190, 199); \n`;\n","import { TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\n\nimport { Container } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Container>\n      <TextField\n        id=\"standard-search\"\n        label=\"Find contacts by name\"\n        type=\"search\"\n        variant=\"standard\"\n        sx={{ marginBottom: '10px' }}\n        onChange={filterChange}\n      />\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ModalBackdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgb(0, 0,0, 0.5); \n`;\n\nexport const ModalContent = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    min-height: 300px;\n    max-width: 600px;\n    width: 100%;\n    padding: 12px;\n    background-color: #fff;\n    border-radius:8px;\n    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.75); \n`;\n\n\nexport const BtnClose = styled.button`\n    position: absolute;\n    top: 4%;\n    left:92%;\n\n    padding: 0px;\n\n    border: transparent;\n    background-color:transparent;\n`;","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport PropTyps from 'prop-types';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { ModalBackdrop, ModalContent, BtnClose } from './Modal.styled';\n\nconst refModal = document.querySelector('#modal-root');\n\nexport const Modal = ({ children, toggleModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [toggleModal]);\n\n  const onClickBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  const onBtnClose = () => {\n    toggleModal();\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={onClickBackdrop}>\n      <ModalContent>\n        <BtnClose onClick={onBtnClose}>\n          <CloseIcon color=\"primary\" />\n        </BtnClose>\n        {children}\n      </ModalContent>\n    </ModalBackdrop>,\n    refModal\n  );\n};\n\nModal.propTyps = {\n  children: PropTyps.node,\n  toggleModal: PropTyps.func.isRequired,\n};\n","import styled from \"styled-components\";\n\n\nexport const Button = styled.button`\n    display: block;\n    width: 250px;\n\n    margin-left: auto;\n    margin-right: auto;\n\n    padding: 18px;\n\n    border: 3px solid white;\n    border-radius: 40px;\n\n    background-color:  rgb(112, 155, 212);\n\n    box-shadow: 2px 2px 5px 1px rgba(0,0,0,0.75);\n\n    font-size: 22px;\n    font-weight: 600;\n    color: white;\n\n    &:hover,\n    &:focus{\n        border-color:  rgb(112, 155, 212);\n    }\n\n    @media (max-width: 320px) {\n      width: 220px;\n   }\n`;","import { FaRegAddressBook } from 'react-icons/fa';\nimport { Button } from './ButtonAdd.styled';\n\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button type=\"button\" aria-label=\"button add contacts\" onClick={onClick}>\n      <FaRegAddressBook size=\"35px\" />\n    </Button>\n  );\n};\n","import { toast } from 'react-toastify';\n\nexport const ErrorInfo = () => {\n  toast.error('Щось пішло не так, спробуйте перезавантажити сторінку', {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n};\n","import PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { fadeIn } from 'utils/variant';\n\nexport const ContactSectionAnimation = ({ children, position, delay }) => {\n  return (\n    <motion.div\n      variants={fadeIn(position, delay)}\n      initial=\"hidden\"\n      animate=\"show\"\n      exit=\"hidden\"\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nContactSectionAnimation.propTypes = {\n  children: PropTypes.node,\n  position: PropTypes.string,\n  delay: PropTypes.number,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography } from '@mui/material';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Section } from '../Section';\nimport { Container } from '../Container';\nimport { Title } from '../Title';\nimport { ContactsForm } from '../ContactsForm';\nimport { ContactList } from '../ContactList';\nimport { Filter } from '../Filter';\nimport { Modal } from '../Modal';\nimport { ButtonAdd } from '../ButtonAdd';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts';\nimport { ErrorInfo } from 'components/ErrorInfo/ErrorInfo';\nimport { ContactSectionAnimation } from 'components/ContactSectionAnimation';\n\nexport const Contacts = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleOpenModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Section>\n        <ContactSectionAnimation position={'down'} delay={0.3}>\n          <Container>\n            <Title title=\"PhoneBook\" />\n            <ButtonAdd onClick={toggleOpenModal} />\n            {isOpen && (\n              <Modal toggleModal={toggleOpenModal}>\n                <ContactsForm toggleModal={toggleOpenModal} />\n              </Modal>\n            )}\n          </Container>\n        </ContactSectionAnimation>\n      </Section>\n      <Section>\n        <ContactSectionAnimation position={'down'} delay={0.6}>\n          <Container $marginBottom=\"0\">\n            <Typography\n              variant=\"h5\"\n              component=\"h3\"\n              sx={{\n                margin: '0 auto',\n                width: '96px',\n                textShadow:\n                  '-1px 0 #ffff, 0 1px #ffff, 1px 0 #ffff, 0 -1px #ffff',\n              }}\n            >\n              Contacts\n            </Typography>\n            <Filter />\n            <ContactList />\n          </Container>\n        </ContactSectionAnimation>\n      </Section>\n      {error && <ErrorInfo />}\n      <ToastContainer />\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n   width: 100vw;\n   height: 100vh;\n   background-image:linear-gradient(90deg, rgba(179,184,184,0.6138830532212884) 100%,rgba(164,164,170,0.4206057422969187) 100%),\n   url(${props => props.$img || \"#BF4F74\"});\n   background-size: cover;\n   background-attachment: fixed;\n`;","import { Container } from './MainContainer.styled';\nimport backgroundImg from '../../image/backGround.jpg';\n\nexport const MainContainer = ({ children }) => {\n  return <Container $img={backgroundImg}>{children}</Container>;\n};\n","import { Contacts } from '../Contacts';\nimport { MainContainer } from '../MainContainer';\n\nexport const ContactsView = () => {\n  return (\n    <>\n      <MainContainer>\n        <Contacts />\n      </MainContainer>\n    </>\n  );\n};\n","import { ContactsView } from 'components/ContactsView';\n\nconst Contacts = () => {\n  return <ContactsView />;\n};\nexport default Contacts;\n","export const fadeIn = (direction, delay) => {\n    return {\n        hidden: {\n            y: direction === \"up\" ? 80 : direction === \"down\" ? -80 : 0,\n            opacity: 0,\n            x: direction === \"left\" ? 80 : direction === \"right\" ? -80 : 0,\n            transition: {\n                type: \"tween\",\n                duration: 1.5,\n                delay: delay,\n                ease: [0.25, 0.6, 0.3, 0.8],\n            },\n        },\n        show: {\n            y: 0,\n            x: 0,\n            opacity: 1,\n            transition: {\n                type: \"tween\",\n                duration: 1.4,\n                delay: delay,\n                ease: [0.25, 0.25, 0.25, 0.75],\n            },\n        },\n    };\n};"],"names":["SectionStyle","styled","Section","children","ContainerStyle","Container","TitleStyle","Title","title","ErrorMsg","regexForName","regexForNumber","ContactsForm","toggleModal","contacts","useSelector","selectContacts","dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","reset","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","user","name","checkName","some","toLowerCase","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","checkNameContact","createContact","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoFocus","helperText","pattern","value","message","type","number","Button","mb","Grid","container","item","Link","href","ContactDescr","ContactDescrNumb","BtnDelete","ContactsItem","onClick","removeContactById","List","ListItem","ContactList","selectVisibleContact","isLoading","selectIsLoading","Loader","map","Filter","marginBottom","onChange","e","setFilter","target","ModalBackdrop","ModalContent","BtnClose","refModal","document","querySelector","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","Close","color","propTyps","PropTyps","ButtonAdd","size","ErrorInfo","ContactSectionAnimation","delay","motion","variants","fadeIn","initial","animate","exit","Contacts","useState","isOpen","setIsOpen","error","selectError","fetchContacts","toggleOpenModal","prevState","$marginBottom","width","textShadow","props","$img","MainContainer","backgroundImg","ContactsView","direction","hidden","y","opacity","x","transition","duration","ease","show"],"sourceRoot":""}